#write.table(res,'mean_500.txt',sep = '\t',col.names = T)
mycolors <- heat.colors(21)
ord <- rank(-as.numeric(res[,8]))
mycolors <- mycolors[ord]
symbols(res[,5],res[,11],circles = res[,9],fg="grey",bg=mycolors,
xlab = colnames(res)[5], ylab = colnames(res)[11],
main = c(colnames(res)[8],'circle size = roughness order; calculated by mean value'))
text(as.numeric(res[,5]),as.numeric(res[,11]),cat)
View(res)
test <- rep(1,21)
test
symbols(res[,5],res[,11],circles = test,fg="grey",bg=mycolors,
xlab = colnames(res)[5], ylab = colnames(res)[11],
main = c(colnames(res)[8],'circle size = roughness order; calculated by mean value'))
test <- c(1:21)
symbols(res[,5],res[,11],circles = test,fg="grey",bg=mycolors,
xlab = colnames(res)[5], ylab = colnames(res)[11],
main = c(colnames(res)[8],'circle size = roughness order; calculated by mean value'))
symbols(res[,5],res[,11],circles = test,fg="grey",bg=mycolors,
xlab = colnames(res)[5], ylab = colnames(res)[11],
main = c(colnames(res)[8],'circle size = roughness order; calculated by mean value'))
symbols(res[,5],res[,11],circles = res[9],fg="grey",bg=mycolors,
xlab = colnames(res)[5], ylab = colnames(res)[11],
main = c(colnames(res)[8],'circle size = roughness order; calculated by mean value'))
symbols(res[,5],res[,11],circles = res[,9],fg="grey",bg=mycolors,
xlab = colnames(res)[5], ylab = colnames(res)[11],
main = c(colnames(res)[8],'circle size = roughness order; calculated by mean value'))
symbols(res[,5],res[,11],circles = res[,9],fg="grey",bg=mycolors,
xlab = colnames(res)[5], ylab = colnames(res)[11],
main = c(colnames(res)[8],'circle size = roughness order; calculated by mean value'))
text(as.numeric(res[,5]),as.numeric(res[,11]),cat)
max(res[,8])
res[,8]/max(res[,8])
as.numeric(res[,8])/max(as.numeric(res[,8]))
round(as.numeric(res[,8])/max(as.numeric(res[,8])))
round(100*as.numeric(res[,8])/max(as.numeric(res[,8])))
ord <- round(100*as.numeric(res[,8])/max(as.numeric(res[,8])))
mycolors <- heat.colors(100)
ord <- round(100*as.numeric(res[,8])/max(as.numeric(res[,8])))
mycolors <- mycolors[ord]
mycolors <- heat.colors(100)
ord <- round(100*as.numeric(res[,8])/max(as.numeric(res[,8])))
mycolors <- mycolors[ord]
symbols(res[,5],res[,11],circles = res[,9],fg="grey",bg=mycolors,
xlab = colnames(res)[5], ylab = colnames(res)[11],
main = c(colnames(res)[8],'circle size = roughness order; calculated by mean value'))
text(as.numeric(res[,5]),as.numeric(res[,11]),cat)
mycolors <- heat.colors(100)
ord <- -round(100*as.numeric(res[,8])/max(as.numeric(res[,8])))
mycolors <- mycolors[ord]
symbols(res[,5],res[,11],circles = res[,9],fg="grey",bg=mycolors,
xlab = colnames(res)[5], ylab = colnames(res)[11],
main = c(colnames(res)[8],'circle size = roughness order; calculated by mean value'))
text(as.numeric(res[,5]),as.numeric(res[,11]),cat)
ord
barplot(rep(1,100), col = mycolors)
barplot(rep(1,100), col = heat.colors(100, alpha = 1))
barplot(rep(1,100), col = heat.colors(100))
barplot(rep(1,100), col = heat.colors(100))
# mycolors <- heat.colors(21)
# ord <- rank(-as.numeric(res[,8]))
# mycolors <- mycolors[ord]
mycolors <- heat.colors(100)
barplot(rep(1,100), col = mycolors)
barplot(rep(1,100), col = mycolors)
mycolors <- heat.colors(100)
ord <- -round(100*as.numeric(res[,8])/max(as.numeric(res[,8])))
mycolors <- mycolors[ord]
symbols(res[,5],res[,11],circles = res[,9],fg="grey",bg=mycolors,
xlab = colnames(res)[5], ylab = colnames(res)[11],
main = c(colnames(res)[8],'circle size = roughness order; calculated by mean value'))
text(as.numeric(res[,5]),as.numeric(res[,11]),cat)
mycolors <- heat.colors(100)
ord <- round(100*as.numeric(res[,8])/max(as.numeric(res[,8])))
mycolors <- mycolors[ord]
symbols(res[,5],res[,11],circles = res[,9],fg="grey",bg=mycolors,
xlab = colnames(res)[5], ylab = colnames(res)[11],
main = c(colnames(res)[8],'circle size = roughness order; calculated by mean value'))
text(as.numeric(res[,5]),as.numeric(res[,11]),cat)
ord
# mycolors <- heat.colors(21)
# ord <- rank(-as.numeric(res[,8]))
# mycolors <- mycolors[ord]
mycolors <- rev(heat.colors(100))
ord <- round(100*as.numeric(res[,8])/max(as.numeric(res[,8])))
mycolors <- mycolors[ord]
symbols(res[,5],res[,11],circles = res[,9],fg="grey",bg=mycolors,
xlab = colnames(res)[5], ylab = colnames(res)[11],
main = c(colnames(res)[8],'circle size = roughness order; calculated by mean value'))
text(as.numeric(res[,5]),as.numeric(res[,11]),cat)
pie(rep(1, 21), col = heat.colors(21), main = "heat") #color wheel
pie(rep(1, 100), col = heat.colors(100), main = "heat") #color wheel
symbols(res[,5],res[,11],circles = res[,9],fg="grey",bg=mycolors,
xlab = "距河道平均水平距離(m)", ylab = "距河道平均垂直距離(m)") #colnames(res)[5]
text(as.numeric(res[,5]),as.numeric(res[,11]),cat)
librar(ggplot2)
library(ggplot2)
ggplot(res,aes(x=res[,5], y=res[,11], size=res[,9], fill=mycolors))
res = data.frame(res)
ggplot(res,aes(x=res[,5], y=res[,11], size=res[,9], fill=mycolors))
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN, fill=mycolors))
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN, fill=mycolors))+
geom_point(stat= "identity",aes(size=ROUGHNESS_MEAN),show.legend = TRUE)
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN, fill=mycolors))+
geom_point(stat= "identity",aes(size=ROUGHNESS_MEAN*10),show.legend = TRUE)+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN))+
geom_point(stat= "identity",aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN))+
geom_point(aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN))
View(res)
res[5,5]
res <- vector()
for (i in c(1:21)){
#zz <- filter(df,grepl(cat[i],df$category1)) #multiple words included
zz <- filter(df,df$category1==cat[i]) #if only the word included
res <- rbind(res,c(cat[i],as.numeric(sapply(zz[4:13],mean,na.rm = TRUE))))
}
colnames(res) <- c('cat',colnames(df[4:13]))
View(res)
res[5,5]
res <- vector()
for (i in c(1:21)){
#zz <- filter(df,grepl(cat[i],df$category1)) #multiple words included
zz <- filter(df,df$category1==cat[i]) #if only the word included
res <- rbind(res,c(cat[i],as.numeric(sapply(zz[4:13],mean,na.rm = TRUE))))
}
View(res)
as.numeric(res)
as.numeric(res[,-1])
zz <- as.numeric(res[,-1])
res <- vector()
for (i in c(1:21)){
#zz <- filter(df,grepl(cat[i],df$category1)) #multiple words included
zz <- filter(df,df$category1==cat[i]) #if only the word included
res <- rbind(res,c(cat[i],as.numeric(sapply(zz[4:13],mean,na.rm = TRUE))))
}
res[5,5]
res <- vector()
for (i in c(1:21)){
#zz <- filter(df,grepl(cat[i],df$category1)) #multiple words included
zz <- filter(df,df$category1==cat[i]) #if only the word included
res <- rbind(res,c(as.numeric(sapply(zz[4:13],mean,na.rm = TRUE))))
}
res[5,5]
res[5,4]
data.frame(cat,res)
res <- data.frame(cat,res)
View(res)
res[5,5]
colnames(res) <- c('cat',colnames(df[4:13]))
res
mycolors <- rev(heat.colors(100))
ord <- round(100*as.numeric(res[,8])/max(as.numeric(res[,8])))
mycolors <- mycolors[ord]
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
theme_bw()
View(res)
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN*10),show.legend = TRUE)+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,fill=factor(mycolors)))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,fill=factor(mycolors)))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(2,15))+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,fill=factor(mycolors)))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(2,23))+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,fill=factor(mycolors)))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(2,46))+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,fill=factor(mycolors)))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(2,30))+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,fill=factor(mycolors)))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,30))+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill=factor(mycolors)))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,30))+
geom_text()+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill=factor(mycolors)))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,30))+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill=factor(mycolors)))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,40))+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill=factor(mycolors)))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill=(mycolors)))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_distiller(palette = "RdPu")+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_viridis(discrete=FALSE)+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_viridis(discrete=FALSE)+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_distiller(palette = "RdPu")+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_color_manual(values=mycolors)+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
mycolors <- rev(heat.colors(100))
ord <- round(100*as.numeric(res[,8])/max(as.numeric(res[,8])))
mycolors <- mycolors[ord]
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_color_manual(values=mycolors)+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_color_manual(values="#69b3a2")+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_manual(values=mycolors)+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = mycolors))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_manual(values=mycolors)+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
mycolors <- rev(heat.colors(100))
ord <- round(100*as.numeric(res[,8])/max(as.numeric(res[,8])))
mycolors <- mycolors[ord]
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = mycolors))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_manual(values=mycolors)+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
mycolors <- (heat.colors(100))
ord <- round(100*as.numeric(res[,8])/max(as.numeric(res[,8])))
mycolors <- mycolors[ord]
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = mycolors))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_manual(values=mycolors)+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = mycolors))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_distiller('YlOrBr')+#scale_fill_manual(values=mycolors)+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_distiller('YlOrBr')+#scale_fill_manual(values=mycolors)+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_distiller(palette = 'YlOrBr')+#scale_fill_manual(values=mycolors)+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = VDIS_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_distiller(palette = 'YlOrBr')+#scale_fill_manual(values=mycolors)+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_distiller(palette = 'YlOrBr')+#scale_fill_manual(values=mycolors)+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
cor(res$GRA_MEAN,res$RELIEF_MEAN)
cor(res[,2:])
cor(res[,-1])
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_manual(values=mycolors)+#scale_fill_distiller(palette = 'YlOrBr')+#
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_gradient(low=mycolors[0],high =mycolors[20])+#scale_fill_distiller(palette = 'YlOrBr')+#
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
mycolors[0]
mycolors
mycolors[20]
mycolors[1]
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_gradient(low=mycolors[1],high =mycolors[20])+#scale_fill_distiller(palette = 'YlOrBr')+#
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_colour_gradient(low=mycolors[1],high =mycolors[20])+#scale_fill_distiller(palette = 'YlOrBr')+#
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_colour_gradient(low = "#132B43",
high = "#56B1F7",
space = "Lab",
na.value = "grey50",
guide = "colourbar",
aesthetics = "colour")+#scale_fill_distiller(palette = 'YlOrBr')+#
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_gradient(low = "#132B43",
high = "#56B1F7",
space = "Lab",
na.value = "grey50",
guide = "colourbar",
aesthetics = "colour")+#scale_fill_distiller(palette = 'YlOrBr')+#
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_gradient(low = "#132B43",
high = "#56B1F7",
space = "Lab",
na.value = "grey50",
guide = "colourbar",
aesthetics = "fill")+#scale_fill_distiller(palette = 'YlOrBr')+#
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_distiller(palette = 'YlOrBr')+#
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_distiller(palette = 'YlOrBr', direction=-1)+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_distiller(palette = 'YlOrBr', direction=-1)+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_distiller(palette = 'YlOrBr', direction= -1)+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_distiller(palette = 'YlOrBr', direction= 1)+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_distiller(palette = 'YlOrBr',trans = 'reverse')+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_distiller(palette = 'YlOrRd',trans = 'reverse')+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_distiller(palette = 'YlOrRd',trans = 'reverse')+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
theme(legend.title = '圖例')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_distiller(palette = 'YlOrRd',trans = 'reverse')+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
guides(fill = guide_legend(reverse = TRUE))+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_distiller(palette = 'YlOrRd',trans = 'reverse')+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
guides(color = guide_legend(reverse = TRUE))+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_distiller(palette = 'YlOrRd',trans = 'reverse')+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
guides(color = guide_legend(reverse = F))+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_distiller(palette = 'YlOrRd',trans = 'reverse')+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
labs(fill = '坡度(%)', shape = '地表粗糙度(-)')+
theme_bw()
ggplot(res,aes(x=HDIS_MEAN, y=VDIS_MEAN,label = cat,fill = GRA_MEAN))+
geom_point(shape=21, aes(size=ROUGHNESS_MEAN),show.legend = TRUE)+
scale_size_continuous(range=c(5,35))+
scale_fill_distiller(palette = 'YlOrRd',trans = 'reverse')+
geom_text()+
xlab('距河道平均水平距離(公尺)')+ylab('距河道平均垂直距離(公尺)')+
labs(fill = '坡度(%)', size = '地表粗糙度(-)')+
theme_bw()
